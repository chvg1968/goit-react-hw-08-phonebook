{"version":3,"file":"static/js/505.82d4f911.chunk.js","mappings":"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","sources":["components/ContactForm/ContactForm.jsx","redux/contacts/contactsSelectors.js","components/ContactItem/ContactItem.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.jsx","pages/PageContacts/PageContacts.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { styled } from '@mui/system';\nimport TextField from '@mui/material/TextField';\nimport Button from '@mui/material/Button';\nimport { nanoid } from 'nanoid';\nimport { useFetchContactsQuery, useCreateContactMutation } from 'redux/contacts/contactsApi';\nimport toast, { Toaster } from 'react-hot-toast';\nimport Loader from 'components/Loader';\n\nconst Form = styled('form')({\n  display: 'flex',\n  flexDirection: 'column',\n  maxWidth: '400px',\n  margin: '2rem auto',\n  borderRadius: '5px', \n});\n\nconst Label = styled('label')({\n  display: 'flex',\n  flexDirection: 'column',\n  marginBottom: '1rem',\n});\n\nconst Input = styled(TextField)({\n  backgroundColor: '#fff',\n});\n\nconst SubmitButton = styled(Button)({\n  marginTop: '1rem',\n  color: '#fff',\n});\n\nfunction ContactForm() {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n  const { data: contacts, isLoading } = useFetchContactsQuery();\n  const [createContact] = useCreateContactMutation();\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const addContact = data => {\n    const contactName = contacts.map(contact => contact.name.toLowerCase());\n    const isAdding = contactName.includes(data.name.toLowerCase());\n\n    if (!isAdding) {\n      createContact(data);\n      reset();\n      toast.success(`😃 Contact, ${name} successfully added`);\n    } else {\n      toast.error(`😏${data.name} is already in contacts.`);\n    }\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const newContact = {\n      id: nanoid(),\n      name,\n      number,\n    };\n\n    addContact(newContact);\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          id=\"name_input\"\n          name=\"name\"\n          value={name}\n          onChange={handleChange}\n          placeholder=\"Enter your name...\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n        />\n      </Label>\n\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          id=\"name_input\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          placeholder=\"Enter your number...\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        />\n      </Label>\n\n      <SubmitButton type=\"submit\"><b>+ Add contact</b></SubmitButton>\n      <Toaster />\n      {isLoading && <Loader />}\n  </Form>\n);\n}\n\nexport default ContactForm;\n","export const getFilter = state => state.contacts.filter;\n","import { ListItem, ListItemText, Button, CircularProgress } from '@mui/material';\nimport { useDeleteContactMutation } from 'redux/contacts/contactsApi';\nimport { styled } from '@mui/system';\n\nconst ContactItemRoot = styled(ListItem)(({ theme }) => ({\n  display: 'flex',\n  alignItems: 'center',\n  justifyContent: 'space-between',\n  padding: theme.spacing(2),\n  backgroundColor: '#ffffff',\n  borderRadius: theme.spacing(1),\n  marginBottom: theme.spacing(2),\n  color: '#000'\n}));\n\nconst DeleteButton = styled(Button)(({ theme }) => ({\n  marginLeft: theme.spacing(2),\n}));\n\nfunction ContactItem({ id, name, number }) {\n  const [deleteContact, { isLoading: isDeleting }] = useDeleteContactMutation();\n\n  const handleDelete = () => {\n    deleteContact(id);\n  };\n\n  return (\n    <ContactItemRoot>\n      <ListItemText primary={`${name}: ${number}`} />\n      <DeleteButton\n        variant=\"contained\"\n        color=\"primary\"\n        disabled={isDeleting}\n        onClick={handleDelete}\n      >\n        {isDeleting ? <CircularProgress size={20} /> : 'Delete'}\n      </DeleteButton>\n    </ContactItemRoot>\n  );\n}\n\nexport default ContactItem;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { useFetchContactsQuery } from 'redux/contacts/contactsApi';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\nimport { List, Typography } from '@mui/material';\nimport ContactItem from 'components/ContactItem';\nimport Loader from 'components/Loader';\n\nconst ContactList = () => {\n  const { data: contacts, error, isLoading } = useFetchContactsQuery();\n  const filter = useSelector(getFilter);\n\n  const filterContacts = () => {\n    return (\n      contacts &&\n      contacts.filter(contact =>\n        contact.name.toLowerCase().includes(filter.toLowerCase())\n      )\n    );\n  };\n\n  const contactList = filterContacts();\n  const renderContacts = contacts && contactList.length > 0;\n\n  return (\n    <>\n      <List>\n        {renderContacts &&\n          contactList.map(({ id, name, number }) => (\n            <ContactItem id={id} key={id} name={name} number={number} />\n          ))}\n        {isLoading && <Loader />}\n        {error && (\n          <Typography variant=\"h6\" align=\"center\">\n            Try adding phone details or contact your administrator\n          </Typography>\n        )}\n      </List>\n    </>\n  );\n};\n\nexport default ContactList;\n","import React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { filter } from 'redux/contacts/contactsSlice';\nimport { getFilter } from 'redux/contacts/contactsSelectors';\nimport { Typography, TextField } from '@mui/material';\nimport styled from '@emotion/styled';\n\nconst Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  justify-content: center;\n  margin-bottom: 20px;\n  width: 100%;\n  \n`;\n\nconst TitleFilter = styled(Typography)`\n  text-align: center;\n`;\n\nconst Input = styled(TextField)`\n  display: block;\n  justify-content:center;\n  align-items: center;\n  margin-top: 2px;\n  /* width: 100%; */\n  border-radius: 20px;\n\n`;\n\nconst Filter = () => {\n  const dispatch = useDispatch();\n  const filterName = useSelector(getFilter);\n\n  const onChangeFilter = evt => {\n    dispatch(filter(evt.currentTarget.value.trim()));\n  };\n\n  return (\n    <Label>\n      <TitleFilter variant=\"body1\"><b>Find contacts by name</b></TitleFilter>\n      <Input\n        type=\"text\"\n        onChange={onChangeFilter}\n        placeholder=\"Enter search name\"\n        value={filterName}\n        // label=\"Standard\" \n        variant=\"filled\"\n        color=\"warning\"\n\n      />\n    </Label>\n  );\n};\n\nexport default Filter;\n","import { Typography } from '@mui/material';\nimport ContactForm from 'components/ContactForm';\nimport ContactList from 'components/ContactList';\nimport Filter from 'components/Filter';\nimport { styled } from '@mui/system';\n\nconst PageContactSection = styled('section')({\n  display: 'flex',\n  flexDirection: 'column',\n  alignItems: 'center',\n  justifyContent: 'center',\n  padding: '2rem',\n  maxWidth: '400px',\n  margin: '0 auto', \n  backgroundColor:'#0099',\n  marginTop: '2rem',\n});\n\nconst PageContactTitle = styled(Typography)(({ theme }) => ({\n  fontSize: '2rem',\n  fontWeight: 'bold',\n  marginBottom: '1rem',\n  color: '#3999f3', \n}));\n\nfunction PageContacts() {\n  return (\n    <PageContactSection>\n      <PageContactTitle>PHONEBOOK ☎️</PageContactTitle>\n      <Typography variant=\"h5\" component=\"h2\" marginBottom=\"1rem\">\n        Add new contact\n      </Typography>\n      <ContactForm />\n\n      <Typography variant=\"h5\" component=\"h2\" marginBottom=\"1rem\">\n        Contacts\n      </Typography>\n      <Filter />\n      <ContactList />\n    </PageContactSection>\n  );\n}\n\nexport default PageContacts;\n"],"names":["Form","styled","display","flexDirection","maxWidth","margin","borderRadius","Label","marginBottom","Input","TextField","backgroundColor","SubmitButton","Button","marginTop","color","useState","name","setName","number","setNumber","useFetchContactsQuery","contacts","data","isLoading","useCreateContactMutation","createContact","handleChange","e","target","value","reset","onSubmit","preventDefault","newContact","id","nanoid","map","contact","toLowerCase","includes","toast","autoComplete","type","onChange","placeholder","pattern","title","required","Loader","getFilter","state","filter","ContactItemRoot","ListItem","theme","alignItems","justifyContent","padding","spacing","DeleteButton","marginLeft","useDeleteContactMutation","deleteContact","isDeleting","ListItemText","primary","variant","disabled","onClick","CircularProgress","size","error","useSelector","contactList","renderContacts","length","List","Typography","align","TitleFilter","dispatch","useDispatch","filterName","evt","currentTarget","trim","PageContactSection","PageContactTitle","fontSize","fontWeight","component"],"sourceRoot":""}